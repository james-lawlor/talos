from typing import TYPE_CHECKING

from cpg_utils import config, hail_batch, Path
from cpg_flow import targets


if TYPE_CHECKING:
    from hailtop.batch.job import BashJob


def make_echtvar_job(
        dataset: targets.Dataset,
        sites_only_vcf: str,
        output: Path,
        job_attrs: dict,
) -> 'BashJob':
    # localise the input VCF
    sites_vcf = hail_batch.get_batch().read_input(sites_only_vcf)

    # this is a single whole-genome file, generated by the echtvar workflow
    gnomad_annotations = hail_batch.get_batch().read_input(config.config_retrieve(['annotations', 'echtvar_gnomad']))

    job = hail_batch.get_batch().new_job(
        name=f'AnnotateGnomadFrequenciesWithEchtvar: {dataset.name}',
        attributes=job_attrs | {'tool': 'echtvar'},
    )
    job.image(config.config_retrieve(['images', 'echtvar']))
    job.command(f'echtvar anno -e {gnomad_annotations} {sites_vcf} {job.output}')
    job.storage('20Gi').memory('highmem').cpu(4)

    hail_batch.get_batch().write_output(job.output, output)
    return job